import streamlit as st
from ultralytics import YOLO
from PIL import Image, ImageFilter
import numpy as np
from io import BytesIO
import requests
import matplotlib.pyplot as plt 
import pandas as pd

#yolo8m

st.title("–î–µ—Ç–µ–∫—Ü–∏—è –≤–µ—Ç—Ä—è–Ω—ã—Ö —Ç—É—Ä–±–∏–Ω")

# –í—ã–±–æ—Ä –∏—Å—Ç–æ—á–Ω–∏–∫–∞
option = st.radio("–í—ã–±–µ—Ä–∏—Ç–µ –∏—Å—Ç–æ—á–Ω–∏–∫:", ["–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª", "–í–≤–µ—Å—Ç–∏ —Å—Å—ã–ª–∫–∏ (–ø–æ –æ–¥–Ω–æ–π –≤ —Å—Ç—Ä–æ–∫–µ)"])

# –ú–æ–¥–µ–ª—å (–∑–∞–º–µ–Ω–∏ –Ω–∞ –ø—É—Ç—å –∫ —Å–≤–æ–µ–π –º–æ–¥–µ–ª–∏)
model_path =  "/Users/nikita/ds_bootcamp/Niyaz/phase-2/ds-phase-2/09-cv/proj_face_det/models/best2.pt"
model = YOLO(model_path)

if option == "–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª":
    uploaded_files = st.file_uploader(
        "–ó–∞–≥—Ä—É–∑–∏—Ç–µ –æ–¥–Ω–æ –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π",
        type=["jpg", "jpeg", "png"],
        accept_multiple_files=True
    )
    if uploaded_files:
        if st.button("üîç –û–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ñ–∞–π–ª(—ã)"):
            for uploaded_file in uploaded_files:
                image = Image.open(uploaded_file).convert("RGB")

                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª
                st.image(image, caption=f"–û—Ä–∏–≥–∏–Ω–∞–ª - {uploaded_file.name}", use_container_width=True)

                # –î–µ—Ç–µ–∫—Ü–∏—è (–±–µ–∑ —Ä–∞–∑–º—ã—Ç–∏—è)
                results = model(np.array(image), conf=0.5)
                for r in results:
                    annotated = r.plot()
                    st.image(annotated, caption=f"–†–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è {uploaded_file.name}", use_container_width=True)
                    #st.write(r.boxes)

elif option == "–í–≤–µ—Å—Ç–∏ —Å—Å—ã–ª–∫–∏ (–ø–æ –æ–¥–Ω–æ–π –≤ —Å—Ç—Ä–æ–∫–µ)":
    urls_text = st.text_area("–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫–∏, –ø–æ –æ–¥–Ω–æ–π –≤ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–µ:")
    if urls_text:
        if st.button("üîç –û–±—Ä–∞–±–æ—Ç–∞—Ç—å —Å—Å—ã–ª–∫—É(–∏)"):
            urls = [url.strip() for url in urls_text.strip().splitlines() if url.strip()]
            for idx, url in enumerate(urls, 1):
                try:
                    response = requests.get(url)
                    response.raise_for_status()
                    image = Image.open(BytesIO(response.content)).convert("RGB")

                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª
                    st.image(image, caption=f"–û—Ä–∏–≥–∏–Ω–∞–ª - URL {idx}", use_container_width=True)

                    # –î–µ—Ç–µ–∫—Ü–∏—è (–±–µ–∑ —Ä–∞–∑–º—ã—Ç–∏—è)
                    results = model(np.array(image), conf=0.5)
                    for r in results:
                        annotated = r.plot()

                        st.image(annotated, caption=f"–†–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è URL {idx}", use_container_width=True)

                except Exception as e:
                    st.error(f"–û—à–∏–±–∫–∞ —Å URL {url}: {e}")

