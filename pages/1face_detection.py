import streamlit as st
from ultralytics import YOLO
from PIL import Image, ImageFilter
import numpy as np
from io import BytesIO
import requests
import matplotlib.pyplot as plt 
import pandas as pd

#yolo12

model_path = "models/best.pt"

# –§—É–Ω–∫—Ü–∏—è —Ä–∞–∑–º—ã—Ç–∏—è
def blur_faces(image_pil, model_path=model_path):
    model = YOLO(model_path)
    image_np = np.array(image_pil)

    results = model(image_np, conf=0.5)

    for result in results:
        if result.boxes is not None:
            for box in result.boxes:
                x1, y1, x2, y2 = box.xyxy[0].cpu().numpy().astype(int)
                face = image_pil.crop((x1, y1, x2, y2))
                blurred_face = face.filter(ImageFilter.GaussianBlur(radius=20))
                image_pil.paste(blurred_face, (x1, y1, x2, y2))
    return image_pil

# Streamlit –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
st.title("–î–µ—Ç–µ–∫—Ü–∏—è –∏ –±–ª—é—Ä –ª–∏—Ü")

# –í—ã–±–æ—Ä –∏—Å—Ç–æ—á–Ω–∏–∫–∞
option = st.radio("–í—ã–±–µ—Ä–∏—Ç–µ –∏—Å—Ç–æ—á–Ω–∏–∫:", ["–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª", "–í–≤–µ—Å—Ç–∏ —Å—Å—ã–ª–∫–∏ (–ø–æ –æ–¥–Ω–æ–π –≤ —Å—Ç—Ä–æ–∫–µ)"])

if option == "–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª":
    uploaded_files = st.file_uploader(
        "–ó–∞–≥—Ä—É–∑–∏—Ç–µ –æ–¥–Ω–æ –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π",
        type=["jpg", "jpeg", "png"],
        accept_multiple_files=True
    )
    if uploaded_files:
        if st.button("üîç –û–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ñ–∞–π–ª(—ã)"):
            for uploaded_file in uploaded_files:
                image = Image.open(uploaded_file).convert("RGB")

                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª
                st.image(image, caption=f"–û—Ä–∏–≥–∏–Ω–∞–ª - {uploaded_file.name}", use_container_width=True)

                # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º
                result_image = blur_faces(image.copy(), model_path=model_path)
                st.image(result_image, caption=f"–†–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è {uploaded_file.name}", use_container_width=True)

elif option == "–í–≤–µ—Å—Ç–∏ —Å—Å—ã–ª–∫–∏ (–ø–æ –æ–¥–Ω–æ–π –≤ —Å—Ç—Ä–æ–∫–µ)":
    urls_text = st.text_area("–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫–∏, –ø–æ –æ–¥–Ω–æ–π –≤ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–µ:")
    if urls_text:
        if st.button("üîç –û–±—Ä–∞–±–æ—Ç–∞—Ç—å —Å—Å—ã–ª–∫—É(–∏)"):
            urls = [url.strip() for url in urls_text.strip().splitlines() if url.strip()]
            for idx, url in enumerate(urls, 1):
                try:
                    response = requests.get(url)
                    response.raise_for_status()
                    image = Image.open(BytesIO(response.content)).convert("RGB")

                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª
                    st.image(image, caption=f"–û—Ä–∏–≥–∏–Ω–∞–ª - URL {idx}", use_container_width=True)

                    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º
                    result_image = blur_faces(image.copy(), model_path=model_path)
                    st.image(result_image, caption=f"–†–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è URL {idx}", use_container_width=True)

                except Exception as e:
                    st.error(f"–û—à–∏–±–∫–∞ —Å URL {url}: {e}")

